/* -*- Mode: C++; tab-aWidth: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is WebRunner
 *
 * The Initial Developer of the Original Code is
 * Matthew Gertner.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Matthew Gertner <matthew@allpeers.com> (Original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMWindow;
interface nsIApplicationTile;
interface nsIFile;

/**
 * Desktop environment-specific actions.
 */
[scriptable, uuid(86f7332c-f4fd-4a30-946d-433596d79304)]
interface nsIDesktopEnvironment : nsISupports
{
  /**
   * The application tile for the current application.
   * On Mac this is the dock tile, on Windows the system tray icon.
   *
   * @returns null if there is no application tile.
  **/
  readonly attribute nsIApplicationTile applicationTile;

  /**
   * Create a shortcut for the application.
   *
   * @param name Name of the shortcut.
   * @param targetPath Path to the application we are linking to
   * @param location Directory where the shortcut should be created.
   * @param workingPath Directory the application should be run in
   *    when the shortcut is executed.
   * @param arguments Command-line parameters to pass to the app.
   * @param description Human-readable description.
   * @param icon Icon to use for the shortcut.
  **/
  nsIFile createShortcut(
    in AString name,
    in nsIFile target,
    in nsIFile location,
    in AString workingPath,
    in AString arguments,
    in AString description,
    in nsIFile icon
  );

  const unsigned short zLevelTop = 1;
  const unsigned short zLevelBottom = 2;
  const unsigned short zLevelAlwaysOnTop = 3;

  /**
   * Change the Z order of the window relative to other windows on the desktop.
  **/
  void setZLevel(in nsIDOMWindow window, in unsigned short level);
};
